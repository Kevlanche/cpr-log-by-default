#!/bin/sh
set -e

rm -rf build_tmp/
mkdir build_tmp

echo "Gathering sources.."
find src -name "*.java" > sources.txt

echo "Building.."
# "Our own" class files
javac @sources.txt -cp libs/json.jar -d build_tmp
# Third party class files
unzip libs/json.jar '*.class' -x */* -d build_tmp
# Resources
cp -r src/codeprober/resources build_tmp/codeprober/

cd build_tmp

echo "Generating jar.."
echo "Main-Class: codeprober.CodeProber" >> Manifest.txt


VERSION=$(git rev-parse --short HEAD)
echo "Git-Version: $VERSION" >> cpr.properties
echo "status: $(git status --porcelain)"
if output=$(git status --porcelain) && [ -z "$output" ]; then
  echo "Git status is clean, this build can be released"
  echo "Git-Status: CLEAN" >> cpr.properties
else
  echo "Git status is non-clean, this is a development build"
  echo "Git-Status: DIRTY" >> cpr.properties
fi
echo "## Automatically generated by server/build.sh. Used by the client to detect when new versions are available. DO NOT MOIDFIFY\n$VERSION" > ../../VERSION

jar cfm ../../code-prober.jar Manifest.txt cpr.properties **/*

cd ..

echo "Cleaning up.."
rm sources.txt
rm -rf build_tmp

echo "Done! Built 'code-prober.jar'"
